CREATE TABLE IF NOT EXISTS CLASS (
    CLASS_NAME VARCHAR (10) PRIMARY KEY NOT NULL,
    FULL_NAME VARCHAR (100) NOT NULL,
    DESCRIPTION TEXT NOT NULL,
    SCHOOL VARCHAR (20) NOT NULL
);

CREATE TABLE IF NOT EXISTS ROLE_MENU_GROUP (
    GROUP_NAME VARCHAR (100) PRIMARY KEY NOT NULL,
    MENU_TYPE VARCHAR (10) NOT NULL,
    DESCRIPTION TEXT DEFAULT NULL,
    CHANNEL_ID VARCHAR (20) NOT NULL
);

CREATE TABLE IF NOT EXISTS ROLE_MENU (
    ROLE_MENU_ID SERIAL PRIMARY KEY,
    MESSAGE_ID VARCHAR (20) NOT NULL,
    MENU_GROUP_NAME VARCHAR (100) NOT NULL,
    ITEM_LIMIT INT NOT NULL,
    CONSTRAINT FK_FOREIGN_GROUP
        FOREIGN KEY (MENU_GROUP_NAME)
            REFERENCES ROLE_MENU_GROUP (GROUP_NAME)
            ON DELETE CASCADE
            ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS MENU_ENTRY (
    ENTRY_ID SERIAL PRIMARY KEY,
    ENTRY_NAME VARCHAR (50) NOT NULL,
    ROLE_ID VARCHAR (20) NOT NULL,
    EMOJI VARCHAR (20) NOT NULL,
    ROLE_MENU_ID INT NOT NULL,
    CONSTRAINT FK_ROLE_MENU_ID FOREIGN KEY (ROLE_MENU_ID)
        REFERENCES  ROLE_MENU (ROLE_MENU_ID)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);
CREATE TABLE IF NOT EXISTS MENU_ENTRY_CLASS (
    ENTRY_ID INT PRIMARY KEY,
    CLASS_NAME VARCHAR (50) NOT NULL,
    CONSTRAINT FK_ENTRY_ID
        FOREIGN KEY (ENTRY_ID)
            REFERENCES  MENU_ENTRY (ENTRY_ID)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    CONSTRAINT FK_CLASS
        FOREIGN KEY (CLASS_NAME)
            REFERENCES  CLASS (CLASS_NAME)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

-- class table[name[ie: cs2500], full_name, description, school, ]


---> role menu group -> list[role menu], channel id

-- existing role menu -----> message id
--                     |
--                     |
--                     |
--                     v
--    list[relation(class name,
--            role id, role ta id ,emoji, meta_data[description?])




